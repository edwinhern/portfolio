name: 'Next.js Bundle Analysis'

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
  workflow_dispatch:

defaults:
  run:
    # change this if your nextjs app does not live at the root of the repo
    working-directory: ./

jobs:
  analyze:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_VERCEL_URL: ${{ secrets.NEXT_PUBLIC_VERCEL_URL }}
      NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
      NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
      SANITY_API_READ_TOKEN: ${{ secrets.SANITY_API_READ_TOKEN }}
      SKIP_ENV_VALIDATION: true
    
    steps:
      - name: Checkout Repository
      - uses: actions/checkout@v4

      - name: Read .nvmrc
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        run: npm ci

      - name: Cache Next.js Build
        uses: actions/cache@v3
        with:
          path: .next/cache
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Build Next.js Application
        run: npm run build

      - name: Analyze bundle
        run: npx -p nextjs-bundle-analysis report

      - name: Upload Bundle Analysis
        uses: actions/upload-artifact@v3
        with:
          name: bundle-analysis
          path: .next/analyze/__bundle_analysis.json

      - name: Download Base Branch Bundle Analysis
        if: github.event_name == 'pull_request'
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ${{ github.workflow }}
          branch: ${{ github.base_ref }}
          path: .next/analyze/base

      - name: Compare with Base Branch Bundle
        if: github.event_name == 'pull_request'
        run: npx -p nextjs-bundle-analysis compare

      - name: Get comment body
        id: get-comment-body
        if: success() && github.event.number
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const fs = require('fs')
            const comment = fs.readFileSync('.next/analyze/__bundle_analysis_comment.txt', 'utf8')
            core.setOutput('body', comment)

      - name: Create Comment with Bundle Analysis
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const commentBody = fs.readFileSync('.next/analyze/__bundle_analysis_comment.txt', 'utf8');
            const issueNumber = context.payload.pull_request.number;
            github.issues.createComment({
              issue_number: issueNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });

